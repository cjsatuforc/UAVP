//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UAVP.UAVPSet.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class hilfe {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal hilfe() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UAVP.UAVPSet.Resources.hilfe", typeof(hilfe).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Werte -99 bis 99 (meist -20 bis +20)
        ///Dient der Einstellung der Reaktionsfähigkeit. Meist wird der Differentialwert mit entgegen gesetztem Vorzeichen zum Proportionalwert eingesetzt.
        ///Der Wert ist zu hoch, wenn das Ufo aufschaukelt oder instabil in der Luft liegt..
        /// </summary>
        internal static string Differenzial {
            get {
                return ResourceManager.GetString("Differenzial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  noch nicht unterstützt !!!.
        /// </summary>
        internal static string EbenenAusgleich {
            get {
                return ResourceManager.GetString("EbenenAusgleich", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Meist Positiv
        ///Gibt an welche Empfängerimpulse ausgewertet werden (positiv/negativ)..
        /// </summary>
        internal static string EmpfängerImpulse {
            get {
                return ResourceManager.GetString("EmpfängerImpulse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graupner-Modus (K1=Gas, K2=Roll, K3=Nick, K4=Gier)
        ///Futaba/Robbe-Modus (K1=Roll, K2=Nick, K3=Gas, K4=Gier).
        /// </summary>
        internal static string Gas_Kanal {
            get {
                return ResourceManager.GetString("Gas-Kanal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roll- und Nick-Steuerknüppelsignale werden in der Wirkung halbiert (Specky-bit)
        ///Dies ist vor allem für Proportionalwerte &gt; 20 und Anfänger hilfreich!.
        /// </summary>
        internal static string HalbRollNick {
            get {
                return ResourceManager.GetString("HalbRollNick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updaterate der Regler
        ///Min  Wert +3
        ///Motoren müssen sauber Anlaufen!!.
        /// </summary>
        internal static string Impuls {
            get {
                return ResourceManager.GetString("Impuls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Werte -99 bis 99 (gleiches Vorzeichen wie Proportional) 
        ///Der Steueranteil der die Summe der Gyrowerte über die Zeit definiert. Ist vor allem für das
        ///„Heading Lock“ des Gierkanals wichtig. Ein zu hoher Wert lässt das Ufo aufschaukeln, ein zu
        ///geringer lässt das Ufo nach einem Drehimpuls nicht mehr ganz in die Ausgangslage
        ///zurückkehren..
        /// </summary>
        internal static string Integral {
            get {
                return ResourceManager.GetString("Integral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integral Limiter 
        ///Immer positiv! 
        ///Maximal 128/Integral=Integral Limiter
        ///(Beispiel Integral= 6  --&gt;  128/6=21.3 abgerundet=21, Integral Limiter darf Max 21 sein!).
        /// </summary>
        internal static string IntegralLimiter {
            get {
                return ResourceManager.GetString("IntegralLimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LEDs zeigen Integriererzustand (hat nur Anzeigende Funktion, keinen Einfluss auf die Parameter).
        /// </summary>
        internal static string Integrierzustand {
            get {
                return ResourceManager.GetString("Integrierzustand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gibt an wie stark die Nick/Rollbewegungen an der Kamera ausgeglichen werden (Tilt)..
        /// </summary>
        internal static string Kameraausgleich {
            get {
                return ResourceManager.GetString("Kameraausgleich", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Definiert wie stark die Abweichung von der Sollrichtung
        ///in die Regelung eingreift.
        ///Werte sind von -99 bis +99, default ist 0.
        /// </summary>
        internal static string Kompass {
            get {
                return ResourceManager.GetString("Kompass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Motoren müssen so langsam wie möglich einige Sekunden nachlaufen, bei Gas auf Null!!.
        /// </summary>
        internal static string Leerlaufgas {
            get {
                return ResourceManager.GetString("Leerlaufgas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limiter (immer positiv!)
        ///Meist 0 bis 40.
        /// </summary>
        internal static string Limiter {
            get {
                return ResourceManager.GetString("Limiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Neutralwert des Linearsensors für diese Achse, bei exakt Waagerechter Lage des UAVP.
        ///Wert wird beim anstecken des Akkus im Linearsensor ermittelt und muss über die Funktion Neutral übertragen werden!.
        /// </summary>
        internal static string Neutral {
            get {
                return ResourceManager.GetString("Neutral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Werte -99 bis 99 
        ///Der Steueranteil, der direkt vom Sender und den Gyros gemessen bzw. durchgereicht wird.
        ///Der Wert ist zu gering, wenn das Ufo schlecht auf Roll/Nick-Steuerbefehle reagiert. Der Wert ist zu hoch, wenn das Ufo aufschaukelt..
        /// </summary>
        internal static string Proportional {
            get {
                return ResourceManager.GetString("Proportional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gibt an bei welcher Spannung der Piezo-Summer/Rote LED anspricht.
        ///Vermeidet schädliche Tiefentladung der Akkus und Abstürze durch fehlende Schubleistung.
        ///Werte bei 3s 43 bis 45.
        /// </summary>
        internal static string Unterspannung {
            get {
                return ResourceManager.GetString("Unterspannung", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gibt die Art des Fliegens an.
        ///+ = ein Ausleger nach vorn in Flugrichtung
        ///X = 2 Ausleger in Flugrichtung(45° versetzt zum + Modus)
        ///Achtung: X Modus erfordert andere Parameter Prop/ Diff/ Integral.
        /// </summary>
        internal static string X_Modus {
            get {
                return ResourceManager.GetString("X+Modus", resourceCulture);
            }
        }
    }
}
